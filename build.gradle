plugins {
    id 'java'
    id "me.champeau.jmh"
    id "io.morethan.jmhreport"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation Testing.assertj.core
    testImplementation Testing.junit.jupiter
    testImplementation "net.jqwik:jqwik:_"

    implementation 'org.apache.commons:commons-lang3:_'
    implementation 'com.google.guava:guava:_'
    testImplementation 'org.awaitility:awaitility:_'


    implementation 'org.apache.commons:commons-numbers-core:_'

    jmh 'org.openjdk.jmh:jmh-core:_'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:_'
}

test {
    useJUnitPlatform {
        includeEngines "jqwik", "junit-jupiter"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileJava {
    // To enable argument names in reporting and debugging
    options.compilerArgs += '-parameters'
}

tasks.withType(JavaCompile).configureEach {
    it.options.compilerArgs += "--enable-preview"
}

tasks.withType(Test).configureEach {
    it.jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec).configureEach {
    it.jvmArgs += '--enable-preview'
}

jmh {
    includes = [".*"]
    threads = Integer.getInteger("jmhThreads", 1)
    resultFormat = "JSON"
}

jmhReport {
    jmhResultPath = project.file('build/results/jmh/results.json')
    jmhReportOutput = project.file('build/results/jmh/report')
}

tasks.jmh.finalizedBy tasks.jmhReport

tasks.jmhReport.doFirst {
    project.file('build/results/jmh/report').mkdirs()
}
